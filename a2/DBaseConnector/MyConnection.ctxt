#BlueJ class context
comment0.target=MyConnection
comment1.params=
comment1.target=MyConnection()
comment10.params=code
comment10.target=void\ deleteCourse(java.lang.String)
comment10.text=\n\ Deletes\ any\ courses\ matching\ a\ given\ course\ code\ from\ the\ database.\n\ \n\ @param\ code\ The\ course\ code\ as\ a\ string\ (ex.\ CIS*1500)\n
comment11.params=
comment11.target=void\ deleteAllCourses()
comment11.text=\n\ NOT\ FOR\ GENERAL\ USE.\ Completely\ deletes\ all\ Course\ information\ from\ the\ database.\n\ \n
comment12.params=id\ name
comment12.target=void\ deleteSavedStudent(java.lang.String,\ java.lang.String)
comment12.text=\n\ Completely\ deletes\ all\ records\ matching\ a\ given\ saved\ student\ ID\ and\ Name.\n\ \n\ @param\ id\ The\ student\ id\n\ @param\ name\ The\ student\ name\n
comment13.params=
comment13.target=void\ deleteAllSavedStudent()
comment13.text=\n\ Completely\ deletes\ all\ saved\ student\ information\ from\ the\ database.\n\ \n
comment14.params=
comment14.target=void\ repopulateCourses()
comment14.text=\n\ Deletes\ all\ current\ course\ records\ in\ the\ Courses\ table,\ and\ replaces\ them\ with\ the\ courselistA2\ text\ file\ contents.\n\t\ Note\ that\ the\ textfile\ must\ be\ in\ the\ same\ directory\ as\ the\ program\ is\ run\ from\ or\ this\ method\ will\n\t\ crash.\ There\ is\ no\ error\ checking.\n
comment15.params=command
comment15.target=void\ customUpdate(java.lang.String)
comment15.text=\n\ NOT\ FOR\ GENERAL\ USE.\ Issues\ a\ custom\ UPDATE\ command\ to\ the\ mysql\ DB.\ This\ must\ be\ a\ mutator\ command\ (INSERT,\ DROP,\ UPDATE...)\n\ Use\ at\ your\ own\ risk.\ TA's\ not\ liable\ for\ databases\ broken\ by\ use\ of\ this\ command.\n\ \n\ @param\ command\ the\ string\ command\ you\ wish\ to\ execute.\n
comment16.params=command
comment16.target=void\ customExecute(java.lang.String)
comment16.text=\n\ NOT\ FOR\ GENERAL\ USE.\ Issues\ a\ custom\ EXECUTE\ command\ to\ the\ mysql\ DB.\ This\ must\ be\ an\ accessor\ command\ (SELECT\ ..\ )\n\ Prints\ the\ returned\ results\ to\ the\ screen.\n\ Use\ at\ your\ own\ risk.\ TA's\ not\ liable\ for\ databases\ broken\ by\ use\ of\ this\ command.\n\ \n\ @param\ command\ the\ string\ command\ you\ wish\ to\ execute.\n
comment2.params=u\ p
comment2.target=MyConnection(java.lang.String,\ java.lang.String)
comment3.params=
comment3.target=void\ connect()
comment3.text=\n\ NOT\ FOR\ GENERAL\ USE.\ Placed\ in\ a\ separate\ method\ to\ ensure\ opening\ and\ closing\ of\ the\ connection\ is\ handled\n\ every\ time\ a\ request\ is\ made,\ rather\ than\ having\ a\ connection\ always\ open\ and\ relying\ \n\ on\ students\ to\ close\ it.\n
comment4.params=sql
comment4.target=void\ dbUpdate(java.lang.String)
comment4.text=\ \n\ NOT\ FOR\ GENERAL\ USE.\ Master\ mutator\ method\ for\ db\ updates\n
comment5.params=
comment5.target=java.util.ArrayList\ getAllCourses()
comment5.text=\n\ Returns\ a\ list\ of\ strings,\ where\ each\ string\ represents\ a\ full\ course.\ You\ will\ need\ to\ parse\ this\ string\ to\ rebuild\ the\ course\n\ \n\ @return\ List\ of\ Strings\ representing\ every\ available\ course\n
comment6.params=courseCode
comment6.target=java.lang.String\ findCourse(java.lang.String)
comment6.text=\n\ Finds\ a\ specific\ course\ based\ only\ on\ the\ course\ code.\ Returns\ all\ information\ about\ that\ course\ in\ one\ single\ string.\n\ You\ will\ need\ to\ parse\ this\ string\ to\ rebuild\ the\ course.\n\ \n\ @param\ courseCode\ A\ string\ course\ code\ (such\ as\ CIS*1500)\n\ @return\ A\ string\ of\ all\ the\ course\ details\ (course\ code,\ course\ credit,\ course\ name,\ course\ prerequisites)\n
comment7.params=code\ credit\ name\ semester\ prereq
comment7.target=void\ addCourse(java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String,\ java.lang.String)
comment7.text=\n\ Adds\ a\ course\ into\ the\ Courses\ table.\ Requires\ at\ minimum\ the\ course\ code.\n\ @param\ code\ The\ Course\ code\n\ @param\ credit\ The\ number\ of\ credits\ for\ the\ course\n\ @param\ name\ The\ name\ of\ the\ course\n\ @param\ semester\ The\ semester\ the\ course\ is\ offered\n\ @param\ prereq\ The\ prerequesits\ of\ a\ course\n
comment8.params=s
comment8.target=void\ saveStudent(DBStudent)
comment8.text=\n\ Saves\ information\ to\ the\ database.\ Accepts\ a\ DBStudent\ object\ only.\ See\ the\ DBStudent\ class\ for\ details\n\ on\ creating\ the\ DBStudent\ object.\n\ \n\ @param\ s\ A\ DBStudent\ object.\ Its\ contents\ will\ be\ saved\ to\ the\ database.\n
comment9.params=id\ name
comment9.target=DBStudent\ loadStudent(java.lang.String,\ java.lang.String)
comment9.text=\n\ Loads\ and\ returns\ a\ DBStudent\ object,\ containing\ any\ available\ information.\n\ \n\ @param\ id\ The\ student's\ id\n\ @param\ name\ The\ student's\ name\n\ @return\ DBStudent\ object\ which\ contains\ the\ student\ id,\ name,\ degree\ and\ course\ information.\n
numComments=17
